{"version":3,"sources":["/Users/agauvrit/Dashlane/projects/ui-components/src/atoms/dropdownMenu/DropdownDemo.tsx","/Users/agauvrit/Dashlane/projects/ui-components/src/atoms/dropdownMenu/DropdownMenu.mdx","/Users/agauvrit/Dashlane/projects/ui-components/src/atoms/icons/index.ts","/Users/agauvrit/Dashlane/projects/ui-components/src/atoms/index.ts","/Users/agauvrit/Dashlane/projects/ui-components/src/index.ts"],"names":["DropdownDemo","React","dropdownIsOpen","setDropdownIsOpen","buttonRef","style","position","ref","nature","onClick","DropdownMenu","elements","title","icon","isOpen","placement","dockingSide","layoutProps","MDXLayout","MDXContent","components","props","mdxType","__position","__code","__scope","this","Playground","Props","Button","PhoneIcon","QuickActionsMenu","display","flexDirection","alignItems","justifyContent","height","containerRef","useRef","background","alignSelf","isMDXComponent"],"mappings":"kfAIMA,EAAyB,WAAO,IAAD,EACSC,YAAe,GADxB,mBAC5BC,EAD4B,KACZC,EADY,KAG7BC,GADeH,SAA6B,MAChCA,SAA6B,OAE/C,OACE,uBAAKI,MAAO,CAAEC,SAAU,aACtB,uBAAKC,IAAKH,GACR,gBAAC,SAAD,CACEI,OAAO,UACPC,QAAS,kBAAMN,GAAmBD,KAFpC,aAOF,gBAACQ,EAAA,EAAD,CACEC,SAAU,CACR,CACEC,MAAO,QACPC,KAAM,gBAAC,YAAD,MACNJ,QAAS,cAEX,CACEG,MAAO,UACPH,QAAS,cAEX,CACEG,MAAO,UACPH,QAAS,cAEX,CACEG,MAAO,aACPH,QAAS,eAGbL,UAAWA,EACXU,OAAQZ,EACRa,UAAU,MACVC,YAAY,YAMLhB,I,oXCpCf,IAKMiB,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,mBAAoBC,QAAS,CAC9DJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,eACAC,UACAlB,iBACAV,eACA6B,WACAC,cACAC,sBACC1B,MAAO,CACR2B,QAAS,OACTC,cAAe,MACfC,WAAY,aACZC,eAAgB,eAChBC,OAAQ,SACPd,QAAQ,cACb,YAAC,EAAD,CAAcA,QAAQ,kBAEpB,iBAAQ,CACN,GAAM,+BADR,+BAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,wjCAAmkCC,QAAS,CAC7mCJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,eACAC,UACAlB,iBACAV,eACA6B,WACAC,cACAC,sBACCT,QAAQ,cACR,WACC,IAAMe,EAAepC,IAAMqC,SAC3B,OAAO,mBAAK/B,IAAK8B,EAAchC,MAAO,CACpC+B,OAAQ,QACRJ,QAAS,OACTO,WAAY,eAEZ,YAAC7B,EAAA,EAAD,CAAcC,SAAU,CAAC,CACvBC,MAAO,QACPH,QAAS,cACR,CACDG,MAAO,UACPH,QAAS,eACPM,UAAU,MAAMsB,aAAcA,EAAcf,QAAQ,gBACtD,YAACO,EAAA,EAAD,CAAQrB,OAAO,UAAUc,QAAQ,UAAjC,sBAEF,mBAAKjB,MAAO,CACVmC,UAAW,aAEX,YAAC9B,EAAA,EAAD,CAAcC,SAAU,CAAC,CACvBC,MAAO,QACPH,QAAS,cACR,CACDG,MAAO,UACPH,QAAS,eACPM,UAAU,SAASsB,aAAcA,EAAcf,QAAQ,gBACzD,YAACO,EAAA,EAAD,CAAQrB,OAAO,UAAUc,QAAQ,UAAjC,2B,6LAUdH,EAAWsB,gBAAiB,G,0DCjG5B,6E,wiUCAA,gK,0eCAA","file":"static/js/src-atoms-dropdown-menu-dropdown-menu.96affb15.js","sourcesContent":["import * as React from 'react';\nimport { Button, PhoneIcon } from 'index';\nimport DropdownMenu from './DropdownMenu';\n\nconst DropdownDemo: React.FC = () => {\n  const [dropdownIsOpen, setDropdownIsOpen] = React.useState(false);\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const buttonRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <div ref={buttonRef}>\n        <Button\n          nature='primary'\n          onClick={() => setDropdownIsOpen(!dropdownIsOpen)}\n        >\n          Click Me\n        </Button>\n      </div>\n      <DropdownMenu\n        elements={[\n          {\n            title: 'Hello',\n            icon: <PhoneIcon />,\n            onClick: () => {}\n          },\n          {\n            title: 'Holà',\n            onClick: () => {}\n          },\n          {\n            title: 'Bonjour',\n            onClick: () => {}\n          },\n          {\n            title: 'Gutten Tag',\n            onClick: () => {}\n          }\n        ]}\n        buttonRef={buttonRef}\n        isOpen={dropdownIsOpen}\n        placement='top'\n        dockingSide='right'\n      ></DropdownMenu>\n    </div>\n  );\n};\n\nexport default DropdownDemo;\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownDemo from './DropdownDemo';\nimport Button from '../button/Button';\nimport PhoneIcon from '../icons/PhoneIcon';\nimport QuickActionsMenu from '../../molecules/quick-actions-menu/QuickActionsMenu';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"dropdown-menu\"\n    }}>{`Dropdown Menu`}</h1>\n    <Playground __position={0} __code={'<DropdownDemo />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      DropdownMenu,\n      DropdownDemo,\n      Button,\n      PhoneIcon,\n      QuickActionsMenu\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'flex-start',\n      justifyContent: 'space-around',\n      height: '200px'\n    }} mdxType=\"Playground\">\n  <DropdownDemo mdxType=\"DropdownDemo\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"position-within-a-container\"\n    }}>{`Position within a container`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const containerRef = React.useRef()\\n  return (\\n    <div\\n      ref={containerRef}\\n      style={{ height: \\'250px\\', display: \\'flex\\', background: \\'ghostwhite\\' }}\\n    >\\n      <DropdownMenu\\n        elements={[\\n          {\\n            title: \\'Hello\\',\\n            onClick: () => {},\\n          },\\n          {\\n            title: \\'Holà\\',\\n            onClick: () => {},\\n          },\\n        ]}\\n        placement=\\\"top\\\"\\n        containerRef={containerRef}\\n      >\\n        <Button nature=\\\"primary\\\">This is too long!</Button>\\n      </DropdownMenu>\\n      <div style={{ alignSelf: \\'flex-end\\' }}>\\n        <DropdownMenu\\n          elements={[\\n            {\\n              title: \\'Hello\\',\\n              onClick: () => {},\\n            },\\n            {\\n              title: \\'Holà\\',\\n              onClick: () => {},\\n            },\\n          ]}\\n          placement=\\\"bottom\\\"\\n          containerRef={containerRef}\\n        >\\n          <Button nature=\\\"primary\\\">This is too long!</Button>\\n        </DropdownMenu>\\n      </div>\\n    </div>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      DropdownMenu,\n      DropdownDemo,\n      Button,\n      PhoneIcon,\n      QuickActionsMenu\n    }} mdxType=\"Playground\">\n      {() => {\n        const containerRef = React.useRef();\n        return <div ref={containerRef} style={{\n          height: \"250px\",\n          display: \"flex\",\n          background: \"ghostwhite\"\n        }}>\n          <DropdownMenu elements={[{\n            title: 'Hello',\n            onClick: () => {}\n          }, {\n            title: 'Holà',\n            onClick: () => {}\n          }]} placement=\"top\" containerRef={containerRef} mdxType=\"DropdownMenu\">\n            <Button nature='primary' mdxType=\"Button\">This is too long!</Button>\n          </DropdownMenu>\n          <div style={{\n            alignSelf: \"flex-end\"\n          }}>\n            <DropdownMenu elements={[{\n              title: 'Hello',\n              onClick: () => {}\n            }, {\n              title: 'Holà',\n              onClick: () => {}\n            }]} placement=\"bottom\" containerRef={containerRef} mdxType=\"DropdownMenu\">\n              <Button nature='primary' mdxType=\"Button\">This is too long!</Button>\n            </DropdownMenu>\n          </div>\n        </div>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","/*-- EXPORT ICON COMPONENTS --*/\nexport { default as OpenWebsiteIcon } from './OpenWebsiteIcon';\nexport { default as MoreIcon } from './MoreIcon';\nexport { default as ShieldFlagIcon } from './ShieldFlagIcon';\nexport { default as ShieldCheckIcon } from './ShieldCheckIcon';\nexport { default as PhoneIcon } from './PhoneIcon';\nexport { default as BuildingIcon } from './BuildingIcon';\nexport { default as HouseIcon } from './HouseIcon';\nexport { default as MailIcon } from './MailIcon';\nexport { default as PaymentsIcon } from './PaymentsIcon';\nexport { default as IdIcon } from './IdIcon';\nexport { default as MobileIcon } from './MobileIcon';\nexport { default as HelpIcon } from './HelpIcon';\nexport { default as PersonalInfoIcon } from './PersonalInfoIcon';\nexport { default as InfoCircleIcon } from './InfoCircleIcon';\nexport { default as PasswordsIcon } from './PasswordsIcon';\nexport { default as PasswordHistoryIcon } from './PasswordHistoryIcon';\nexport { default as SecurityDashboardIcon } from './SecurityDashboardIcon';\nexport { default as PasswordChangerIcon } from './PasswordChangerIcon';\nexport { default as LogOutIcon } from './LogOutIcon';\nexport { default as ComputerIcon } from './ComputerIcon';\nexport { default as ToolsIcon } from './ToolsIcon';\nexport { default as RefreshIcon } from './RefreshIcon';\nexport { default as WarningIcon } from './WarningIcon';\nexport { default as ArrowDownIcon } from './ArrowDownIcon';\nexport { default as CloseIcon } from './CloseIcon';\nexport { default as SearchIcon } from './SearchIcon';\nexport { default as DotsIcon } from './DotsIcon';\nexport { default as GeneratorIcon } from './GeneratorIcon';\nexport { default as WebIcon } from './WebIcon';\nexport { default as VaultIcon } from './VaultIcon';\nexport { default as CheckIcon } from './CheckIcon';\nexport { default as CaretDownIcon } from './CaretDownIcon';\nexport { default as LoaderIcon } from './LoaderIcon';\nexport { default as SharedIcon } from './SharedIcon';\nexport { default as NoNetworkIcon } from './NoNetworkIcon';\nexport { default as HideIcon } from './HideIcon';\nexport { default as RevealIcon } from './RevealIcon';\nexport { default as CopyPasswordIcon } from './CopyPasswordIcon';\nexport { default as EditIcon } from './EditIcon';\n","export { default as Button } from './button/Button';\nexport { default as Tooltip } from './tooltip/Tooltip';\nexport * from './icons';\nexport * from './button/types';\nexport * from './tooltip/types';\n","export * from './atoms';\n"],"sourceRoot":""}