{"version":3,"sources":["/Users/agauvrit/Dashlane/projects/ui-components/src/atoms/dropdownMenu/DropdownMenu.mdx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","__position","__code","__scope","this","Playground","Props","DropdownMenu","Button","PhoneIcon","QuickActionsMenu","style","display","flexDirection","alignItems","justifyContent","height","elements","title","icon","onClick","nature","menuMaxHeight","dockingSide","alignSelf","placement","containerRef","React","useRef","ref","background","isMDXComponent"],"mappings":"2kBAgBMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,iBADR,iBAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,qoDAA4pDC,QAAS,CACtsDJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,eACAC,UACAC,iBACAC,WACAC,cACAC,sBACCC,MAAO,CACRC,QAAS,OACTC,cAAe,MACfC,WAAY,aACZC,eAAgB,eAChBC,OAAQ,SACPhB,QAAQ,cACb,YAAC,IAAD,CAAciB,SAAU,CAAC,CACnBC,MAAO,QACPC,KAAM,YAAC,IAAD,CAAWnB,QAAQ,cACzBoB,QAAS,cACR,CACDF,MAAO,UACPE,QAAS,cACR,CACDF,MAAO,UACPE,QAAS,cACR,CACDF,MAAO,aACPE,QAAS,eACPpB,QAAQ,gBACd,YAAC,IAAD,CAAQqB,OAAO,UAAUrB,QAAQ,UAAjC,eAEE,YAAC,IAAD,CAAcsB,cAAe,IAAKL,SAAU,CAAC,CAC3CC,MAAO,QACPE,QAAS,cACR,CACDF,MAAO,UACPE,QAAS,cACR,CACDF,MAAO,UACPE,QAAS,cACR,CACDF,MAAO,aACPE,QAAS,cACR,CACDF,MAAO,OACPE,QAAS,cACR,CACDF,MAAO,aACPE,QAAS,cACR,CACDF,MAAO,SACPE,QAAS,cACR,CACDF,MAAO,aACPE,QAAS,eACPpB,QAAQ,gBAChB,YAAC,IAAD,CAAQqB,OAAO,UAAUrB,QAAQ,UAAjC,qBAEA,YAAC,IAAD,CAAciB,SAAU,CAAC,CACnBC,MAAO,QACPE,QAAS,cACR,CACDF,MAAO,UACPE,QAAS,eACPG,YAAY,QAAQvB,QAAQ,gBAClC,YAAC,IAAD,CAAQqB,OAAO,UAAUrB,QAAQ,UAAjC,mBAEF,mBAAKW,MAAO,CACNa,UAAW,aAEf,YAAC,IAAD,CAAcP,SAAU,CAAC,CACnBC,MAAO,QACPE,QAAS,cACR,CACDF,MAAO,UACPE,QAAS,eACPK,UAAU,MAAMzB,QAAQ,gBAC9B,YAAC,IAAD,CAAQqB,OAAO,UAAUrB,QAAQ,UAAjC,mBAIF,iBAAQ,CACN,GAAM,+BADR,+BAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,wjCAAmkCC,QAAS,CAC7mCJ,MAAOK,KAAOA,KAAKL,MAAQA,EAC3BM,eACAC,UACAC,iBACAC,WACAC,cACAC,sBACCV,QAAQ,cACR,WACC,IAAM0B,EAAeC,IAAMC,SAC3B,OAAO,mBAAKC,IAAKH,EAAcf,MAAO,CACpCK,OAAQ,QACRJ,QAAS,OACTkB,WAAY,eAEZ,YAAC,IAAD,CAAcb,SAAU,CAAC,CACvBC,MAAO,QACPE,QAAS,cACR,CACDF,MAAO,UACPE,QAAS,eACPK,UAAU,MAAMC,aAAcA,EAAc1B,QAAQ,gBACtD,YAAC,IAAD,CAAQqB,OAAO,UAAUrB,QAAQ,UAAjC,sBAEF,mBAAKW,MAAO,CACVa,UAAW,aAEX,YAAC,IAAD,CAAcP,SAAU,CAAC,CACvBC,MAAO,QACPE,QAAS,cACR,CACDF,MAAO,UACPE,QAAS,eACPK,UAAU,SAASC,aAAcA,EAAc1B,QAAQ,gBACzD,YAAC,IAAD,CAAQqB,OAAO,UAAUrB,QAAQ,UAAjC,2B,6LAUdH,EAAWkC,gBAAiB","file":"static/js/src-atoms-dropdown-menu-dropdown-menu.2c9e15ed.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport DropdownMenu from './DropdownMenu';\nimport Button from '../button/Button';\nimport PhoneIcon from '../icons/PhoneIcon';\nimport QuickActionsMenu from '../../molecules/quick-actions-menu/QuickActionsMenu';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"dropdown-menu\"\n    }}>{`Dropdown Menu`}</h1>\n    <Playground __position={0} __code={'<DropdownMenu\\n  elements={[\\n    {\\n      title: \\'Hello\\',\\n      icon: <PhoneIcon />,\\n      onClick: () => {},\\n    },\\n    {\\n      title: \\'Holà\\',\\n      onClick: () => {},\\n    },\\n    {\\n      title: \\'Bonjour\\',\\n      onClick: () => {},\\n    },\\n    {\\n      title: \\'Gutten Tag\\',\\n      onClick: () => {},\\n    },\\n  ]}\\n>\\n  <Button nature=\\\"primary\\\"> Click Me </Button>\\n</DropdownMenu>\\n<DropdownMenu\\n  menuMaxHeight={150}\\n  elements={[\\n    {\\n      title: \\'Hello\\',\\n      onClick: () => {},\\n    },\\n    {\\n      title: \\'Holà\\',\\n      onClick: () => {},\\n    },\\n    {\\n      title: \\'Bonjour\\',\\n      onClick: () => {},\\n    },\\n    {\\n      title: \\'Gutten Tag\\',\\n      onClick: () => {},\\n    },\\n    {\\n      title: \\'Ciao\\',\\n      onClick: () => {},\\n    },\\n    {\\n      title: \\'Konnichiha\\',\\n      onClick: () => {},\\n    },\\n    {\\n      title: \\'Ni Hao\\',\\n      onClick: () => {},\\n    },\\n    {\\n      title: \\'Dobry Degn\\',\\n      onClick: () => {},\\n    },\\n  ]}\\n>\\n  <Button nature=\\\"primary\\\"> With long list </Button>\\n</DropdownMenu>\\n<DropdownMenu\\n  elements={[\\n    {\\n      title: \\'Hello\\',\\n      onClick: () => {},\\n    },\\n    {\\n      title: \\'Holà\\',\\n      onClick: () => {},\\n    },\\n  ]}\\n  dockingSide=\\\"right\\\"\\n>\\n  <Button nature=\\\"primary\\\"> On the right </Button>\\n</DropdownMenu>\\n<div style={{ alignSelf: \\'flex-end\\' }}>\\n  <DropdownMenu\\n    elements={[\\n      {\\n        title: \\'Hello\\',\\n        onClick: () => {},\\n      },\\n      {\\n        title: \\'Holà\\',\\n        onClick: () => {},\\n      },\\n    ]}\\n    placement=\\\"top\\\"\\n  >\\n    <Button nature=\\\"primary\\\"> On the top </Button>\\n  </DropdownMenu>\\n</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      DropdownMenu,\n      Button,\n      PhoneIcon,\n      QuickActionsMenu\n    }} style={{\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'flex-start',\n      justifyContent: 'space-around',\n      height: '200px'\n    }} mdxType=\"Playground\">\n  <DropdownMenu elements={[{\n        title: 'Hello',\n        icon: <PhoneIcon mdxType=\"PhoneIcon\" />,\n        onClick: () => {}\n      }, {\n        title: 'Holà',\n        onClick: () => {}\n      }, {\n        title: 'Bonjour',\n        onClick: () => {}\n      }, {\n        title: 'Gutten Tag',\n        onClick: () => {}\n      }]} mdxType=\"DropdownMenu\">\n    <Button nature='primary' mdxType=\"Button\"> Click Me </Button>\n  </DropdownMenu>\n      <DropdownMenu menuMaxHeight={150} elements={[{\n        title: 'Hello',\n        onClick: () => {}\n      }, {\n        title: 'Holà',\n        onClick: () => {}\n      }, {\n        title: 'Bonjour',\n        onClick: () => {}\n      }, {\n        title: 'Gutten Tag',\n        onClick: () => {}\n      }, {\n        title: 'Ciao',\n        onClick: () => {}\n      }, {\n        title: 'Konnichiha',\n        onClick: () => {}\n      }, {\n        title: 'Ni Hao',\n        onClick: () => {}\n      }, {\n        title: 'Dobry Degn',\n        onClick: () => {}\n      }]} mdxType=\"DropdownMenu\">\n  <Button nature='primary' mdxType=\"Button\"> With long list </Button>\n      </DropdownMenu>\n  <DropdownMenu elements={[{\n        title: 'Hello',\n        onClick: () => {}\n      }, {\n        title: 'Holà',\n        onClick: () => {}\n      }]} dockingSide=\"right\" mdxType=\"DropdownMenu\">\n    <Button nature='primary' mdxType=\"Button\"> On the right </Button>\n  </DropdownMenu>\n  <div style={{\n        alignSelf: 'flex-end'\n      }}>\n    <DropdownMenu elements={[{\n          title: 'Hello',\n          onClick: () => {}\n        }, {\n          title: 'Holà',\n          onClick: () => {}\n        }]} placement=\"top\" mdxType=\"DropdownMenu\">\n      <Button nature='primary' mdxType=\"Button\"> On the top </Button>\n        </DropdownMenu>\n  </div>\n    </Playground>\n    <h2 {...{\n      \"id\": \"position-within-a-container\"\n    }}>{`Position within a container`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const containerRef = React.useRef()\\n  return (\\n    <div\\n      ref={containerRef}\\n      style={{ height: \\'250px\\', display: \\'flex\\', background: \\'ghostwhite\\' }}\\n    >\\n      <DropdownMenu\\n        elements={[\\n          {\\n            title: \\'Hello\\',\\n            onClick: () => {},\\n          },\\n          {\\n            title: \\'Holà\\',\\n            onClick: () => {},\\n          },\\n        ]}\\n        placement=\\\"top\\\"\\n        containerRef={containerRef}\\n      >\\n        <Button nature=\\\"primary\\\">This is too long!</Button>\\n      </DropdownMenu>\\n      <div style={{ alignSelf: \\'flex-end\\' }}>\\n        <DropdownMenu\\n          elements={[\\n            {\\n              title: \\'Hello\\',\\n              onClick: () => {},\\n            },\\n            {\\n              title: \\'Holà\\',\\n              onClick: () => {},\\n            },\\n          ]}\\n          placement=\\\"bottom\\\"\\n          containerRef={containerRef}\\n        >\\n          <Button nature=\\\"primary\\\">This is too long!</Button>\\n        </DropdownMenu>\\n      </div>\\n    </div>\\n  )\\n}'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      DropdownMenu,\n      Button,\n      PhoneIcon,\n      QuickActionsMenu\n    }} mdxType=\"Playground\">\n      {() => {\n        const containerRef = React.useRef();\n        return <div ref={containerRef} style={{\n          height: \"250px\",\n          display: \"flex\",\n          background: \"ghostwhite\"\n        }}>\n          <DropdownMenu elements={[{\n            title: 'Hello',\n            onClick: () => {}\n          }, {\n            title: 'Holà',\n            onClick: () => {}\n          }]} placement=\"top\" containerRef={containerRef} mdxType=\"DropdownMenu\">\n            <Button nature='primary' mdxType=\"Button\">This is too long!</Button>\n          </DropdownMenu>\n          <div style={{\n            alignSelf: \"flex-end\"\n          }}>\n            <DropdownMenu elements={[{\n              title: 'Hello',\n              onClick: () => {}\n            }, {\n              title: 'Holà',\n              onClick: () => {}\n            }]} placement=\"bottom\" containerRef={containerRef} mdxType=\"DropdownMenu\">\n              <Button nature='primary' mdxType=\"Button\">This is too long!</Button>\n            </DropdownMenu>\n          </div>\n        </div>;\n      }}\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}