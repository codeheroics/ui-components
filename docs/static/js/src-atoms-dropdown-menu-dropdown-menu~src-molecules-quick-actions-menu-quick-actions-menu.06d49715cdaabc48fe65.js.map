{"version":3,"sources":["/Users/agauvrit/Dashlane/projects/ui-components/src/ions/button/base/BaseButton.tsx","/Users/agauvrit/Dashlane/projects/ui-components/src/ions/button/themes/ThemeWrapper.tsx","/Users/agauvrit/Dashlane/projects/ui-components/src/ions/button/themes/danger/ButtonDanger.tsx","/Users/agauvrit/Dashlane/projects/ui-components/src/ions/button/themes/secondary/ButtonSecondary.tsx","/Users/agauvrit/Dashlane/projects/ui-components/src/ions/button/themes/primary/ButtonPrimary.tsx","/Users/agauvrit/Dashlane/projects/ui-components/src/ions/button/themes/ghost/ButtonGhost.tsx","/Users/agauvrit/Dashlane/projects/ui-components/src/atoms/button/Button.tsx","/Users/agauvrit/Dashlane/projects/ui-components/src/ions/dropdown/card/DropdownCard.tsx","/Users/agauvrit/Dashlane/projects/ui-components/src/atoms/dropdownMenu/helpers.ts","/Users/agauvrit/Dashlane/projects/ui-components/src/atoms/dropdownMenu/DropdownMenu.tsx","/Users/agauvrit/Dashlane/projects/ui-components/src/colors/colors.ts","/Users/agauvrit/Dashlane/projects/ui-components/src/ions/dropdown/element/DropdownElement.tsx","/Users/agauvrit/Dashlane/projects/ui-components/src/ions/icon/base/Icon.tsx","/Users/agauvrit/Dashlane/projects/ui-components/src/ions/icon/wrapper/SvgWrapper.tsx","/Users/agauvrit/Dashlane/projects/ui-components/src/ions/text/StyledText.tsx","/Users/agauvrit/Dashlane/projects/ui-components/src/molecules/quick-actions-menu/QuickActionsMenu.tsx","/Users/agauvrit/Dashlane/projects/ui-components/src/utility/helpers.ts","/Users/agauvrit/Dashlane/projects/ui-components/src/utility/positionCompute.ts"],"names":["getBgColorByState","state","theme","backgroundColor","transparent","getBorderByState","borderColor","baseStyle","css","textColor","white","props","customStyle","SmallButton","styled","button","MediumButton","LargeButton","StyledContent","StyledText","BaseButton","children","size","content","assertUnreachable","ThemeWrapper","colors","buttonTheme","dark","dangerColors","default","idle","functionalRed02","hover","functionalRed01","active","functionalRed00","ButtonDanger","secondaryColors","dashGreen05","dashGreen03","dashGreen00","dashGreen01","dashGreen02","ButtonSecondary","primaryColors","midGreen00","dashDarkerGreen00","midGreen03","midGreen01","ButtonPrimary","ghostStyle","ButtonGhost","Button","nature","renderButtonByType","DropdownCard","div","dashGreen04","maxHeight","isDropdownOutOfContainer","elementDimensions","containerDimensions","placement","rect","y","totalHeight","minHeight","height","getControllerAndMenuDimensions","menuRef","buttonRef","elementIsBefore","dropdownStyle","getCSSComputedStyle","current","checkIsStyleComputed","getAlternativeStyle","width","computeElementHeight","totalWidth","computeElementWidth","getBoundingRect","getDropdownPosition","dockingSide","MenuWrapper","isReadyForDisplay","POSSIBLE_PLACEMENTS","DropdownMenu","React","setPlacement","prevIsOpen","isOpen","controllerRef","containerElement","containerRef","window","getContainerBoundaries","newPlacement","getElementPlacement","e","console","error","ref","menuMaxHeight","dashGreen06","pink00","pink01","pink02","pink03","pink04","pink05","red00","red01","red02","red03","red04","red05","grey00","grey01","grey02","grey03","grey04","grey05","grey06","black","validatorGreen","Text","Wrapper","DropdownElement","type","onClick","getSize","getColor","propName","animated","Icon","svg","attrs","viewBox","version","xmlns","disabled","SvgWrapper","title","isAnimated","Array","from","find","child","isAnimatedSvg","span","SquareButton","QuickActionsMenu","setIsOpen","preventDefault","icon","maxMenuHeight","_","Error","containsNumber","value","test","containsChar","char","indexOf","style","returnNumber","isNaN","elementStyle","alternativeHeight","parseInt","paddingTop","paddingBottom","marginTop","marginBottom","tooltipStyle","alternativeWidth","paddingLeft","paddingRight","marginLeft","marginRight","initialStyle","element","innerDiv","document","createElement","Object","values","forEach","property","toString","appendChild","getBoundingClientRect","remove","top","left","right","bottom","container","innerHeight","maxWidth","innerWidth","minWidth","containerRect","getBeforePseudoElement","getComputedStyle","undefined","getElementDimensions","isElementOutOfContainerMethod","possibilities","newPossibilities","filter","possiblePlacement"],"mappings":"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","file":"static/js/src-atoms-dropdown-menu-dropdown-menu~src-molecules-quick-actions-menu-quick-actions-menu.417ff99d.js","sourcesContent":["import * as React from 'react';\nimport styled, {\n  css,\n  DefaultTheme,\n  FlattenInterpolation,\n  ThemedStyledProps\n} from 'styled-components';\nimport { transparent, white } from '@colors';\nimport { StyledText } from '@ions/text/StyledText';\nimport { Props } from '@atoms/button/Button';\nimport { assertUnreachable } from '@utility/helpers';\nimport { ButtonState } from '@ions/button/themes/types';\n\nexport type BaseButtonProps = Omit<Props, 'nature' | 'theme'>;\ntype Theme = {\n  [key in keyof DefaultTheme]: DefaultTheme[key];\n};\n\nexport interface BaseProps extends BaseButtonProps {\n  children?: React.ReactNode;\n  customStyle?: FlattenInterpolation<ThemedStyledProps<{}, DefaultTheme>>;\n  theme: Theme;\n}\n\nconst getBgColorByState = (state: ButtonState) => ({ theme }: BaseProps) =>\n  theme.backgroundColor[state] || transparent;\nconst getColor = ({ theme }: BaseProps) => theme.textColor || white;\nconst getBorderByState = (state: ButtonState) => ({ theme }: BaseProps) =>\n  theme.borderColor\n    ? `1px solid ${theme.borderColor[state] || transparent}`\n    : 'none';\n\nconst baseStyle = css`\n  color: ${getColor};\n  font-size: 16px;\n  line-height: 20px;\n  background-color: ${getBgColorByState('idle')};\n  cursor: pointer;\n  border: ${getBorderByState('idle')};\n  border-radius: 4px;\n  min-width: 60px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  transition: all 0.1s;\n  ${props => props.customStyle};\n\n  &:hover:not(:disabled),\n  &:focus:not(:disabled) {\n    border: ${getBorderByState('hover')};\n    background-color: ${getBgColorByState('hover')};\n  }\n  &:active:not(:disabled) {\n    border: ${getBorderByState('active')};\n    background-color: ${getBgColorByState('active')};\n  }\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    span {\n      pointer-events: none;\n    }\n  }\n`;\n\nconst SmallButton = styled.button<BaseProps>`\n  ${baseStyle}\n  padding: 8px 16px;\n  height: 32px;\n  font-size: 12px;\n  line-height: 16px;\n`;\n\nconst MediumButton = styled.button<BaseProps>`\n  ${baseStyle}\n  padding: 10px 16px;\n  height: 40px;\n`;\n\nconst LargeButton = styled.button<BaseProps>`\n  ${baseStyle}\n  padding: 14px 24px;\n  height: 48px;\n`;\n\nconst StyledContent = styled(StyledText)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst BaseButton: React.FunctionComponent<BaseProps> = ({\n  children,\n  size = 'medium',\n  ...props\n}: BaseProps) => {\n  const content = <StyledContent>{children || 'Default'}</StyledContent>;\n  switch (size) {\n    case 'small':\n      return <SmallButton {...props}>{content}</SmallButton>;\n    case 'medium':\n      return <MediumButton {...props}>{content}</MediumButton>;\n    case 'large':\n      return <LargeButton {...props}>{content}</LargeButton>;\n    default:\n      return assertUnreachable(size);\n  }\n};\n\nexport default BaseButton;\n","import * as React from 'react';\nimport { BaseButton } from '@ions';\nimport { ThemeColors, ThemeWrapperProps } from '@ions/button/themes/types';\nimport {\n  DefaultTheme,\n  FlattenInterpolation,\n  ThemedStyledProps\n} from 'styled-components';\n\ninterface Props extends ThemeWrapperProps {\n  colors: ThemeColors;\n  customStyle?: FlattenInterpolation<ThemedStyledProps<{}, DefaultTheme>>;\n}\n\nexport const ThemeWrapper = ({\n  colors,\n  theme = 'default',\n  ...props\n}: Props) => {\n  const buttonTheme =\n    theme === 'dark' && colors.dark ? colors.dark : colors.default;\n\n  return <BaseButton theme={buttonTheme} {...props} />;\n};\n","import * as React from 'react';\nimport { functionalRed00, functionalRed01, functionalRed02 } from '@colors';\nimport { ThemeColors, ThemeWrapperProps } from '@ions/button/themes/types';\nimport { ThemeWrapper } from '@ions/button/themes/ThemeWrapper';\n\nconst dangerColors: ThemeColors = {\n  default: {\n    backgroundColor: {\n      idle: functionalRed02,\n      hover: functionalRed01,\n      active: functionalRed00\n    }\n  }\n};\n\nconst ButtonDanger = (props: ThemeWrapperProps) => (\n  <ThemeWrapper colors={dangerColors} {...props} />\n);\n\nexport default ButtonDanger;\n","import * as React from 'react';\nimport {\n  dashGreen00,\n  dashGreen01,\n  dashGreen02,\n  dashGreen03,\n  dashGreen05,\n  transparent\n} from '@colors';\nimport { ThemeColors, ThemeWrapperProps } from '@ions/button/themes/types';\nimport { ThemeWrapper } from '@ions/button/themes/ThemeWrapper';\n\nconst secondaryColors: ThemeColors = {\n  default: {\n    backgroundColor: {\n      idle: transparent,\n      hover: dashGreen05,\n      active: dashGreen03\n    },\n    textColor: dashGreen00,\n    borderColor: {\n      idle: dashGreen05,\n      hover: dashGreen05,\n      active: dashGreen03\n    }\n  },\n  dark: {\n    backgroundColor: {\n      idle: transparent,\n      hover: dashGreen01,\n      active: dashGreen02\n    },\n    borderColor: {\n      idle: dashGreen01,\n      hover: dashGreen01,\n      active: dashGreen02\n    }\n  }\n};\n\nconst ButtonSecondary = (props: ThemeWrapperProps) => (\n  <ThemeWrapper colors={secondaryColors} {...props} />\n);\n\nexport default ButtonSecondary;\n","import * as React from 'react';\nimport {\n  dashDarkerGreen00,\n  dashGreen00,\n  midGreen00,\n  midGreen01,\n  midGreen03,\n  white\n} from '@colors';\nimport { ThemeColors, ThemeWrapperProps } from '@ions/button/themes/types';\nimport { ThemeWrapper } from '@ions/button/themes/ThemeWrapper';\n\nconst primaryColors: ThemeColors = {\n  default: {\n    backgroundColor: {\n      idle: midGreen00,\n      hover: dashGreen00,\n      active: dashDarkerGreen00\n    }\n  },\n  dark: {\n    backgroundColor: {\n      idle: white,\n      hover: midGreen03,\n      active: midGreen01\n    },\n    textColor: dashGreen00\n  }\n};\n\nconst ButtonPrimary = (props: ThemeWrapperProps) => (\n  <ThemeWrapper colors={primaryColors} {...props} />\n);\n\nexport default ButtonPrimary;\n","import * as React from 'react';\nimport { css } from 'styled-components';\nimport { dashGreen00, dashGreen01, dashGreen05, transparent } from '@colors';\nimport { ThemeColors, ThemeWrapperProps } from '@ions/button/themes/types';\nimport { ThemeWrapper } from '@ions/button/themes/ThemeWrapper';\n\nconst primaryColors: ThemeColors = {\n  default: {\n    backgroundColor: {\n      idle: transparent,\n      hover: transparent,\n      active: dashGreen05\n    },\n    textColor: dashGreen00,\n    borderColor: {\n      idle: transparent,\n      hover: dashGreen05,\n      active: dashGreen05\n    }\n  },\n  dark: {\n    backgroundColor: {\n      idle: transparent,\n      hover: transparent,\n      active: dashGreen01\n    },\n    borderColor: {\n      idle: transparent,\n      hover: dashGreen01,\n      active: dashGreen01\n    }\n  }\n};\n\n/**\n * Ghost button special styling\n */\nconst ghostStyle = css`\n  min-width: 32px;\n  svg {\n    margin: -8px -16px;\n  }\n`;\n\nconst ButtonGhost = (props: ThemeWrapperProps) => (\n  <ThemeWrapper customStyle={ghostStyle} colors={primaryColors} {...props} />\n);\n\nexport default ButtonGhost;\n","import * as React from 'react';\nimport {\n  ButtonDanger,\n  ButtonGhost,\n  ButtonPrimary,\n  ButtonSecondary\n} from '@ions/button/themes';\nimport { assertUnreachable } from '@utility/helpers';\n\n// Downside: Docz will display all props including React.ButtonHTMLAttributes ones\n// https://github.com/doczjs/docz/issues/895\nexport interface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The button's nature\n   */\n  nature: 'danger' | 'secondary' | 'primary' | 'ghost';\n  /**\n   * Activates the button dark mode\n   */\n  theme?: 'default' | 'dark';\n  /**\n   * Disabled state of the button\n   * @default false\n   */\n  disabled?: boolean;\n  /**\n   * A large style option\n   @default false\n   */\n  size?: 'small' | 'medium' | 'large';\n}\n\nconst Button: React.FunctionComponent<Props> = (props): JSX.Element | null => {\n  const renderButtonByType = ({\n    nature,\n    ...props\n  }: Props): JSX.Element | null => {\n    switch (nature) {\n      case 'danger':\n        return <ButtonDanger {...props} />;\n      case 'secondary':\n        return <ButtonSecondary {...props} />;\n      case 'primary':\n        return <ButtonPrimary {...props} />;\n      case 'ghost':\n        return <ButtonGhost {...props} />;\n      default:\n        return assertUnreachable(nature);\n    }\n  };\n\n  return renderButtonByType(props);\n};\n\nexport default Button;\n","import styled from 'styled-components';\nimport { dashGreen04, white } from '@colors';\n\ninterface Props {\n  maxHeight?: number;\n}\n\nconst DropdownCard = styled.div<Props>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${white};\n  border: 1px solid ${dashGreen04};\n  box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n  padding: 8px 0;\n  max-height: ${props => props.maxHeight || 100}px;\n  overflow-y: scroll;\n`;\n\nexport default DropdownCard;\n","import { Placement } from './types';\nimport { assertUnreachable } from '@utility/helpers';\nimport {\n  checkIsStyleComputed,\n  computeElementHeight,\n  computeElementWidth,\n  ElementDimensions,\n  getAlternativeStyle,\n  getBoundingRect,\n  getCSSComputedStyle,\n  IsElementOutOfContainerMethod\n} from '@utility/positionCompute';\nimport { MenuWrapperProps } from './DropdownMenu';\n\nconst MARGIN = 4;\n\nexport const isDropdownOutOfContainer: IsElementOutOfContainerMethod<\n  Placement\n> = ({ elementDimensions, containerDimensions, placement }) => {\n  switch (placement) {\n    case 'top':\n      return (\n        elementDimensions.rect.y - elementDimensions.totalHeight <\n        containerDimensions.minHeight\n      );\n    case 'bottom':\n      return (\n        elementDimensions.rect.y +\n          elementDimensions.rect.height +\n          elementDimensions.totalHeight >\n        containerDimensions.maxHeight\n      );\n    default:\n      assertUnreachable(placement);\n      return true;\n  }\n};\n\nexport const getControllerAndMenuDimensions = (\n  menuRef: React.RefObject<HTMLElement>,\n  buttonRef: React.RefObject<HTMLElement>,\n  elementIsBefore?: boolean\n): ElementDimensions => {\n  const dropdownStyle = getCSSComputedStyle(menuRef.current, elementIsBefore);\n  const isStyleComputed = checkIsStyleComputed(dropdownStyle);\n  const { height = null, width = null } = isStyleComputed\n    ? {}\n    : getAlternativeStyle(dropdownStyle, menuRef.current); // Extra calculations For Edge\n  const totalHeight = computeElementHeight(dropdownStyle, height);\n  const totalWidth = computeElementWidth(dropdownStyle, width);\n  const rect = getBoundingRect(buttonRef.current);\n\n  return {\n    totalHeight,\n    totalWidth,\n    rect\n  };\n};\n\nexport const getDropdownPosition = ({\n  dockingSide,\n  placement\n}: MenuWrapperProps) => {\n  return `${placement === 'top' ? 'bottom' : 'top'}: 100%;\n  transform: translateY(${placement === 'top' ? -1 * MARGIN : MARGIN}px);\n  ${dockingSide}: 0;`;\n};\n","import * as React from 'react';\nimport DropdownCard from '@ions/dropdown/card/DropdownCard';\nimport styled from 'styled-components';\nimport { DockingSide, Placement } from './types';\nimport {\n  getControllerAndMenuDimensions,\n  getDropdownPosition,\n  isDropdownOutOfContainer\n} from './helpers';\nimport {\n  getContainerBoundaries,\n  getElementPlacement\n} from '@utility/positionCompute';\n\ninterface Props {\n  isOpen: boolean;\n  controllerRef: React.RefObject<HTMLElement>;\n  menuMaxHeight?: number;\n  dockingSide?: DockingSide;\n  placement?: Placement;\n  containerRef?: React.RefObject<HTMLElement>;\n}\nexport interface MenuWrapperProps {\n  placement: Placement;\n  dockingSide: DockingSide;\n  isReadyForDisplay: boolean;\n}\n\nconst MenuWrapper = styled.div<MenuWrapperProps>`\n  position: absolute;\n  opacity: ${props => (props.isReadyForDisplay ? 1 : 0)};\n  ${getDropdownPosition}\n  max-width: 318px;\n`;\n\nconst DEFAULT_PLACEMENT = 'bottom';\nconst POSSIBLE_PLACEMENTS: Placement[] = ['top', 'bottom'];\n\nconst DropdownMenu: React.FC<Props> = props => {\n  const [placement, setPlacement] = React.useState<Placement | null>(null);\n  const menuRef = React.useRef<HTMLDivElement>(null);\n  const prevIsOpen = React.useRef(false);\n\n  React.useEffect(() => {\n    if (props.isOpen === prevIsOpen.current) {\n      return;\n    }\n    prevIsOpen.current = props.isOpen;\n    setPlacement(null);\n\n    if (!menuRef.current || !props.controllerRef.current) {\n      return;\n    }\n    const elementDimensions = getControllerAndMenuDimensions(\n      menuRef,\n      props.controllerRef\n    );\n\n    const containerElement =\n      (props.containerRef && props.containerRef.current) || window;\n    const containerDimensions = getContainerBoundaries(containerElement);\n\n    try {\n      const newPlacement = getElementPlacement(\n        isDropdownOutOfContainer,\n        props.placement || DEFAULT_PLACEMENT,\n        POSSIBLE_PLACEMENTS,\n        elementDimensions,\n        containerDimensions\n      );\n      setPlacement(newPlacement);\n    } catch (e) {\n      console.error('Error while computing DropdownMenu position', e);\n    }\n  });\n\n  return (\n    <>\n      {props.isOpen && (\n        <MenuWrapper\n          placement={placement || DEFAULT_PLACEMENT}\n          ref={menuRef}\n          dockingSide={props.dockingSide || 'left'}\n          isReadyForDisplay={placement !== null}\n        >\n          <DropdownCard maxHeight={props.menuMaxHeight}>\n            {props.children}\n          </DropdownCard>\n        </MenuWrapper>\n      )}\n    </>\n  );\n};\n\nexport default DropdownMenu;\n","/* -- DASH_GREEN -- */\nexport const dashGreen00 = '#0E353D';\nexport const dashGreen01 = '#3E5D64';\nexport const dashGreen02 = '#6E868B';\nexport const dashGreen03 = '#9FAEB1';\nexport const dashGreen04 = '#CFD7D8';\nexport const dashGreen05 = '#D9DFE0';\nexport const dashGreen06 = '#F5F7F7';\n\n/* -- DASH_DARKER_GREEN -- */\nexport const dashDarkerGreen00 = '#071A1E';\n\n/* -- MID_GREEN -- */\nexport const midGreen00 = '#0E6476';\nexport const midGreen01 = '#3E8391';\nexport const midGreen02 = '#6EA2AD';\nexport const midGreen03 = '#9FC1C8';\nexport const midGreen04 = '#CFE0E4';\nexport const midGreen05 = '#D9E6E9';\n\n/* -- PINK -- */\nexport const pink00 = '#FDB5AF';\nexport const pink01 = '#FDC4BF';\nexport const pink02 = '#FED3CF';\nexport const pink03 = '#FEE1DF';\nexport const pink04 = '#FFF0EF';\nexport const pink05 = '#FFF3F2';\n\n/* -- ORANGE -- */\nexport const orange00 = '#FE5B33';\nexport const orange01 = '#FE7C5C';\nexport const orange02 = '#FE9D85';\nexport const orange03 = '#FFBDAD';\nexport const orange04 = '#FFDED6';\nexport const orange05 = '#FFE5DE';\n\n/* -- FUNCTIONAL_RED -- */\nexport const functionalRed00 = '#4E000D';\nexport const functionalRed01 = '#8B0018';\nexport const functionalRed02 = '#FF002D';\nexport const functionalRed03 = '#FFA49F';\n\n/* -- RED -- */\nexport const red00 = '#BF0A33';\nexport const red01 = '#CC3B5C';\nexport const red02 = '#D96C85';\nexport const red03 = '#E59DAD';\nexport const red04 = '#F2CED6';\nexport const red05 = '#F5D8DE';\n\n/* -- GREY -- */\nexport const grey00 = '#615B57';\nexport const grey01 = '#999592';\nexport const grey02 = '#CCC7C2';\nexport const grey03 = '#D6D2CE';\nexport const grey04 = '#E0DDDA';\nexport const grey05 = '#EBE9E7';\nexport const grey06 = '#F5F4F3';\n\n/* -- BLACK -- */\nexport const black = '#000000';\n\n/* -- WHITE -- */\nexport const white = '#FFFFFF';\n\n/* -- VALIDATOR_GREEN -- */\nexport const validatorGreen = '#20B422';\n\n/* -- TRANSPARENT -- */\nexport const transparent = 'transparent';\n","import * as React from 'react';\nimport { StyledText } from '@ions/text/StyledText';\nimport styled from 'styled-components';\nimport { dashGreen00, dashGreen06 } from '@colors';\n\ninterface Props {\n  onClick: (e: React.MouseEvent) => void;\n}\n\nconst Text = styled(StyledText)`\n  color: ${dashGreen00};\n  line-height: 20px;\n  font-size: 16px;\n`;\n\nconst Wrapper = styled.button`\n  cursor: pointer;\n  border: transparent 0px;\n  outline: none;\n  display: flex;\n  box-sizing: border-box;\n  height: 36px;\n  flex-shrink: 0;\n  padding: 8px 16px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  &:hover {\n    background-color: ${dashGreen06};\n  }\n`;\n\nconst DropdownElement: React.FC<Props> = props => {\n  return (\n    <Wrapper type='button' onClick={props.onClick}>\n      <Text>{props.children}</Text>\n    </Wrapper>\n  );\n};\n\nexport default DropdownElement;\n","import styled from 'styled-components';\nimport { Props as IconProps } from '@ions/icon/types';\n\nexport type ColorProps = 'color' | 'hoverColor' | 'activeColor';\ninterface Props extends Omit<IconProps, 'title' | 'children'> {\n  animated?: boolean;\n}\n\nconst getSize = ({ size = 20 }) => `${size}px`;\nconst getColor = (propName: ColorProps = 'color') => (props: Props): string =>\n  props.animated ? 'none' : props[propName] || props['color'] || 'inherit';\n\nconst Icon = styled.svg.attrs<Props>(({ viewBox }: Props) => ({\n  viewBox: viewBox || '0 0 20 20',\n  version: '1.1',\n  xmlns: 'http://www.w3.org/2000/svg'\n}))`\n  display: flex;\n  width: ${getSize};\n  height: ${getSize};\n  cursor: ${({ disabled }): string => (disabled ? 'not-allowed' : 'pointer')};\n  outline: none;\n  border-radius: 4px;\n  fill: ${getColor()};\n  opacity: ${({ disabled }): number => (disabled ? 0.5 : 1)};\n  transition: ${({ animated }): string =>\n    animated ? 'none' : 'all 0.1s ease-in'};\n  &:hover {\n    fill: ${getColor('hoverColor')};\n  }\n  &:active {\n    fill: ${getColor('activeColor')};\n  }\n`;\n\nexport default Icon;\n","import * as React from 'react';\nimport Icon from '@ions/icon/base/Icon';\nimport { Props } from '@ions/icon/types';\n\nconst isAnimatedSvg = (children: React.ReactElement[]) =>\n  !!Array.from<React.ReactElement>(children).find(\n    child => child.type === 'animateTransform'\n  );\nconst SvgWrapper: React.FunctionComponent<Props> = ({\n  title,\n  children,\n  ...props\n}: Props): JSX.Element => {\n  const isAnimated =\n    children.props && children.props.children\n      ? isAnimatedSvg(children.props.children)\n      : false;\n  return (\n    <Icon animated={isAnimated} {...props}>\n      {title ? <title>{title}</title> : null}\n      {children}\n    </Icon>\n  );\n};\n\nexport default SvgWrapper;\n","import styled from 'styled-components';\n\nexport const StyledText = styled.span`\n  font-family: inherit;\n  font-weight: 600;\n`;\n","import * as React from 'react';\nimport DropdownMenu from '@atoms/dropdownMenu/DropdownMenu';\nimport { Button } from '@atoms';\nimport styled from 'styled-components';\n\ninterface Props {\n  icon: JSX.Element;\n  maxMenuHeight?: number;\n  containerRef?: React.RefObject<HTMLElement>;\n}\n\nconst SquareButton = styled(Button)`\n  width: 32px;\n  height: 32px;\n`;\n\nconst Wrapper = styled.div`\n  width: 32px;\n  height: 32px;\n  position: relative;\n`;\n\nconst QuickActionsMenu: React.FC<Props> = props => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const controllerRef = React.useRef<HTMLDivElement>(null);\n\n  const onButtonClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <Wrapper>\n      <div ref={controllerRef}>\n        <SquareButton nature='ghost' onClick={onButtonClick}>\n          {props.icon}\n        </SquareButton>\n      </div>\n      <DropdownMenu\n        dockingSide='right'\n        menuMaxHeight={props.maxMenuHeight}\n        isOpen={isOpen}\n        controllerRef={controllerRef}\n        containerRef={props.containerRef}\n      >\n        {props.children}\n      </DropdownMenu>\n    </Wrapper>\n  );\n};\n\nexport default QuickActionsMenu;\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function assertUnreachable(_: never): never {\n  throw new Error('Unexpected value. Should have been never.');\n}\n","/** Both tooltips and dropdown use the DOM to make sure\n * they are fitting in a container\n */\n\nconst containsNumber = (value: string) => /\\d/.test(value);\nconst containsChar = (value: string, char: string) =>\n  value.indexOf(char) !== -1;\n\nexport const checkIsStyleComputed = (style: CSSStyleDeclaration) => {\n  const { height, width } = style;\n  if (!height || !width) {\n    return false;\n  }\n\n  return (\n    containsNumber(height) ||\n    containsNumber(width) ||\n    !containsChar(height, '%') ||\n    !containsChar(width, '%')\n  );\n};\n\nconst returnNumber = (value: number) => (isNaN(value) ? 0 : value);\n\nexport const computeElementHeight = (\n  elementStyle: CSSStyleDeclaration,\n  alternativeHeight: string | null\n) => {\n  const height =\n    parseInt(elementStyle.paddingTop || '0', 10) +\n    parseInt(elementStyle.paddingBottom || '0', 10) +\n    parseInt(elementStyle.marginTop || '0', 10) +\n    parseInt(elementStyle.marginBottom || '0', 10) +\n    parseInt(alternativeHeight || elementStyle.height || '0', 10);\n  return returnNumber(height);\n};\n\nexport const computeElementWidth = (\n  tooltipStyle: CSSStyleDeclaration,\n  alternativeWidth: string | null\n) => {\n  const width =\n    parseInt(tooltipStyle.paddingLeft || '0', 10) +\n    parseInt(tooltipStyle.paddingRight || '0', 10) +\n    parseInt(tooltipStyle.marginLeft || '0', 10) +\n    parseInt(tooltipStyle.marginRight || '0', 10) +\n    parseInt(alternativeWidth || tooltipStyle.width || '0', 10);\n\n  return returnNumber(width);\n};\n\nexport const getAlternativeStyle = (\n  initialStyle: CSSStyleDeclaration,\n  element: EventTarget | null\n) => {\n  let innerDiv = document.createElement('div');\n  (Object.values(initialStyle) as (keyof CSSStyleDeclaration)[]).forEach(\n    property => {\n      if (\n        property &&\n        property !== 'length' &&\n        property !== 'parentRule' &&\n        !containsNumber(property.toString())\n      ) {\n        innerDiv.style[property] = initialStyle[property];\n      }\n    }\n  );\n  (element as Element).appendChild(innerDiv);\n  let { height, width } = innerDiv.getBoundingClientRect();\n  innerDiv.remove();\n\n  return { height: height.toString(), width: width.toString() };\n};\n\nexport const getBoundingRect = (element: Element | null): ClientRect => {\n  if (element) {\n    return element.getBoundingClientRect();\n  } else {\n    return {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      width: 0,\n      height: 0\n    };\n  }\n};\n\nexport const getContainerBoundaries = (\n  container: Element | Window\n): ContainerDimensions => {\n  if (container === window) {\n    return {\n      maxHeight: window.innerHeight,\n      minHeight: 0,\n      maxWidth: window.innerWidth,\n      minWidth: 0\n    };\n  }\n  const containerRect = getBoundingRect(container as Element);\n\n  return {\n    maxHeight: containerRect.top + containerRect.height,\n    minHeight: containerRect.top,\n    minWidth: containerRect.left,\n    maxWidth: containerRect.left + containerRect.width\n  };\n};\n\nexport const getCSSComputedStyle = (\n  ref: Element | null,\n  getBeforePseudoElement?: boolean\n) =>\n  window.getComputedStyle(\n    ref as Element,\n    getBeforePseudoElement ? ':before' : undefined\n  );\n\nexport const getElementDimensions = (\n  menuRef: React.RefObject<HTMLElement>,\n  elementIsBefore?: boolean\n): ElementDimensions => {\n  const dropdownStyle = getCSSComputedStyle(menuRef.current, elementIsBefore);\n  const isStyleComputed = checkIsStyleComputed(dropdownStyle);\n  const { height = null, width = null } = isStyleComputed\n    ? {}\n    : getAlternativeStyle(dropdownStyle, menuRef.current); // Extra calculations For Edge\n  const totalHeight = computeElementHeight(dropdownStyle, height);\n  const totalWidth = computeElementWidth(dropdownStyle, width);\n  const rect = getBoundingRect(menuRef.current);\n\n  return {\n    totalHeight,\n    totalWidth,\n    rect\n  };\n};\n\nexport interface ElementDimensions {\n  rect: ClientRect;\n  totalHeight: number;\n  totalWidth: number;\n}\n\ninterface ContainerDimensions {\n  maxHeight: number;\n  maxWidth: number;\n  minHeight: number;\n  minWidth: number;\n}\n\nexport type IsElementOutOfContainerMethod<T> = (params: {\n  elementDimensions: ElementDimensions;\n  containerDimensions: ContainerDimensions;\n  placement: T;\n}) => boolean;\n\nexport const getElementPlacement = <T>(\n  isElementOutOfContainerMethod: IsElementOutOfContainerMethod<T>,\n  placement: T,\n  possibilities: T[],\n  elementDimensions: ElementDimensions,\n  containerDimensions: ContainerDimensions\n): T | null => {\n  if (!placement) {\n    throw new Error(\n      'Element cannot be displayed in the container Element/Window due to its incompatible size.' +\n        'Please consider reducing it or better position tooltiped' +\n        'element in the screen.'\n    );\n  }\n\n  if (\n    !isElementOutOfContainerMethod({\n      elementDimensions,\n      containerDimensions,\n      placement\n    })\n  ) {\n    return placement;\n  }\n\n  const newPossibilities = possibilities.filter(\n    possiblePlacement => placement !== possiblePlacement\n  );\n  const [firstPossiblePlacement] = newPossibilities;\n\n  return getElementPlacement(\n    isElementOutOfContainerMethod,\n    firstPossiblePlacement,\n    newPossibilities,\n    elementDimensions,\n    containerDimensions\n  );\n};\n"],"sourceRoot":""}